/*
This seed job will install a pipeline to update an env based on pushes
to the harbor repo.  A webhook needs to be configured in harbor to call jenkins
when a new container is pushed. This will occur when a rebuild is triggered do to
a buildpack update.

The token is what should be sent by the jenkins generic webhook trigger to create a new
build which will update kustomize in that environment.
*/
def apps = [
    'stage': [
        buildPipeline: 'ci/jenkins/pipelines/update-k8s-app.pipeline',
        token: 'stage-rebuild'
    ],
    'prod': [
        buildPipeline: 'ci/jenkins/pipelines/update-k8s-app.pipeline',
        token: 'prod-rebuild'
    ]
]


apps.each { name, appInfo ->
    folder(name)
    pipelineJob(name+"/update-kustomize") {
       description("Job to build '$name'. Generated by the Seed Job, please do not change !!!")
       environmentVariables(
            ENV_NAME: name,
       )
       definition {
            cps {
                script(readFileFromWorkspace(appInfo.buildPipeline))
                sandbox()
            }
        }        
        triggers {
             genericTrigger {
                genericVariables {
                    genericVariable {
                         key("TYPE")
                         value("\$.type")
                         expressionType("JSONPath") //Optional, defaults to JSONPath
                    }
                    genericVariable {
                         key("DIGEST")
                         value("\$.event_data.resources[0].digest")
                         expressionType("JSONPath") //Optional, defaults to JSONPath
                    }
                    genericVariable {
                         key("REPO_FULL_NAME")
                         value("\$.event_data.repository.repo_full_name")
                         expressionType("JSONPath") //Optional, defaults to JSONPath
                    }
                    genericVariable {
                         key("APP_NAME")
                         value("\$.event_data.repository.name")
                         expressionType("JSONPath") //Optional, defaults to JSONPath
                    }
                    genericVariable {
                         key("RESOURCE_URL")
                         value("\$.event_data.resources[0].resource_url")
                         expressionType("JSONPath") //Optional, defaults to JSONPath
                    }
                }
            token(appInfo.token)
            printContributedVariables(true)
            printPostContent(true)
            regexpFilterText("\$TYPE")
            regexpFilterExpression("PUSH_ARTIFACT")

        }
        properties{
            disableConcurrentBuilds()
        }
    }
}
}
       
